name: Build K8smeta plugin
on:
  pull_request:
    branches: [ main ]
    paths:
        - 'plugins/k8smeta/**'
  push:
    branches: [ main ]
    paths:
        - 'plugins/k8smeta/**'
  workflow_dispatch:

# Checks if any concurrent jobs under the same pull request or branch are being executed
concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    build-and-test:
      name: build-and-test
      runs-on: ubuntu-22.04
      steps:
        - name: Checkout ‚§µÔ∏è
          uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
          with:
            fetch-depth: 0

        - name: Setup Go
          uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
          with:
            go-version: '1.21'
            check-latest: true

        - name: Install deps ‚õìÔ∏è
          run: |
            sudo apt update -y
            sudo apt install -y --no-install-recommends cmake build-essential autoconf libtool pkg-config zip unzip tar git wget

        - name: Install vcpkg üì¶
          uses: ./.github/actions/install-vcpkg
          with:
            # Using a specific commit to avoid unexpected issues
            vcpkg_version: 2025.09.17

        - name: Initialize CodeQL
          uses: github/codeql-action/init@16140ae1a102900babc80a33c44059580f687047 # v4.30.9
          with:
            languages: cpp

        - name: Build k8s meta plugin üèóÔ∏è
          run: |
            cd plugins/k8smeta
            cmake --preset vcpkg-release
            cmake --build --preset vcpkg-release --target k8smeta -j$(nproc)

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@16140ae1a102900babc80a33c44059580f687047 # v4.30.9

        - name: Build and run tests üèéÔ∏è
          run: |
            cd plugins/k8smeta
            cmake --build --preset vcpkg-release --target build-server -j$(nproc)
            cmake --build --preset vcpkg-release --target build-tests -j$(nproc)
            cmake --build --preset vcpkg-release --target run-server &
            cmake --build --preset vcpkg-release --target run-tests

    formatting-check:
      runs-on: ubuntu-22.04
      steps:
        - name: Checkout code
          uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

        - name: Run clang-format style check
          uses: jidicula/clang-format-action@4726374d1aa3c6aecf132e5197e498979588ebc8 #v4.15.0
          with:
            clang-format-version: '14'
            check-path: plugins/k8smeta
