on:
  workflow_call:
    inputs:
      dev-tag:
        description: The tag used for oci artifacts published from the main branch.
        required: false
        type: string
      suffix:
        description: Suffix for uploading packages (dev or stable)
        required: true
        type: string

jobs:
  publish-oci-artifacts:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      matrix: ${{ steps.oci_build.outputs.REGISTRY_UPDATE_STATUS }}

    steps:
      - name: Download x86_64 plugins
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: plugins-x86_64-${{ inputs.suffix }}.tar.gz
          path: /tmp/plugins-x86_64

      - name: Download aarch64 plugins
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: plugins-aarch64-${{ inputs.suffix }}.tar.gz
          path: /tmp/plugins-aarch64

      - name: Checkout Plugins
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Golang
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: "^1.21"

      - name: Build registry artifact tool
        working-directory: build/registry
        run: make

      - name: Upload OCI artifacts to GitHub packages
        id: oci_build
        env:
          REGISTRY: ghcr.io
          REGISTRY_USER: ${{ github.repository_owner }}
          REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_GITHUB: https://github.com/${{ github.repository_owner }}/plugins.git
        working-directory: build/registry
        run: |
          REGISTRY_UPDATE_STATUS=$(./bin/registry update-oci-registry \
             ../../registry.yaml \
             --plugins-amd64-path /tmp/plugins-x86_64 \
             --plugins-arm64-path /tmp/plugins-aarch64 \
             --rulesfiles-path /tmp/plugins-x86_64 \
             --dev-tag "${{ inputs.dev-tag }}"
          )
          echo "REGISTRY_UPDATE_STATUS=${REGISTRY_UPDATE_STATUS}" >> $GITHUB_OUTPUT

  # Create signatures of the plugin artifacts as OCI artifacts
  sign-oci-artifacts:
    needs: [publish-oci-artifacts]
    runs-on: ubuntu-latest

    if: ${{ needs.publish-oci-artifacts.outputs.matrix != '[]' }}
    strategy:
      matrix:
        value: ${{ fromJson(needs.publish-oci-artifacts.outputs.matrix) }}

    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - run: cosign version

      - name: Log into ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign the artifacts with GitHub OIDC Token
        run: cosign sign --yes ${{ matrix.value.repository.ref }}@${{ matrix.value.artifact.digest }}
