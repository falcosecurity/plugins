name: Update OCI Artifacts
on:
  workflow_dispatch:

jobs:
  publish-oci-artifacts:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.oci_build.outputs.REGISTRY_UPDATE_STATUS }}

    steps:
      - name: Checkout Plugins
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19'

      - name: Build registry artifact tool
        working-directory: build/registry
        run: make

      - name: Upload OCI artifacts to GitHub packages
        id: oci_build
        env:
          REGISTRY: ghcr.io
          REGISTRY_USER: ${{ github.repository_owner }}
          REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_GITHUB: https://github.com/${{ github.repository_owner }}/plugins.git
        working-directory: build/registry
        run: >-
          echo "REGISTRY_UPDATE_STATUS=$(
            ./bin/registry update-oci-registry ../../registry.yaml
          )" >> $GITHUB_OUTPUT

      - name: Print registry update status
        run: "echo ${{ steps.oci_build.outputs.REGISTRY_UPDATE_STATUS }}"

  # Create signatures of the plugin artifacts as OCI artifacts
  sign-oci-artifacts:
    needs: [ publish-oci-artifacts ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        value: ${{ fromJson(needs.publish-oci-artifacts.outputs.matrix) }}

    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.0
        with:
          cosign-release: 'v2.1.0'
      - run: cosign version
      - name: Sign the artifacts with GitHub OIDC Token
        run: cosign sign --yes ${{ matrix.value.repository.ref }}@${{ matrix.value.artifact.digest }}

